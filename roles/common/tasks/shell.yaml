- name: Install zsh apt package
  ansible.builtin.apt:
    name: zsh
    state: latest
  become: true

- name: Change user's shell to zsh
  ansible.builtin.user:
    name: "{{ local_user }}"
    shell: "/usr/bin/zsh"
  ignore_errors: true
  become: true

- name: Download Oh My Zsh
  ansible.builtin.git:
    repo: "https://github.com/ohmyzsh/ohmyzsh"
    dest: "/home/{{ local_user }}/.oh-my-zsh"
    depth: 1

- name: Copy .zshrc 
  ansible.builtin.copy:
    src: "shell/.zshrc"
    dest: "/home/{{ local_user }}/.zshrc"
    backup: yes

- name: Download zsh-autosuggestions plugin 
  ansible.builtin.git:
    repo: "https://github.com/zsh-users/zsh-autosuggestions"
    dest: "/home/{{ local_user }}/.oh-my-zsh/plugins/zsh-autosuggestions"
    depth: 1

- name: Download zsh-syntax-highlighting plugin 
  ansible.builtin.git:
    repo: "https://github.com/zsh-users/zsh-syntax-highlighting.git"
    dest: "/home/{{ local_user }}/.oh-my-zsh/plugins/zsh-syntax-highlighting"
    depth: 1

- name: Download starship from GitHub Releases
  ansible.builtin.get_url:
    url: "https://github.com/starship/starship/releases/latest/download/starship-x86_64-unknown-linux-gnu.tar.gz"
    dest: "/tmp/starship-x86_64-unknown-linux-gnu.tar.gz"
    mode: '0755'

- name: Extract starship from archive 
  ansible.builtin.unarchive:
    src: "/tmp/starship-x86_64-unknown-linux-gnu.tar.gz"
    dest: "/tmp"
    remote_src: yes

- name: Install starship binary
  ansible.builtin.copy:
    src: "/tmp/starship"
    dest: "/usr/local/bin/starship"
    mode: '0755'
  become: true

- name: Copy starship configuration
  ansible.builtin.copy:
    src: "shell/starship.toml"
    dest: "/home/{{ local_user }}/.config/starship.toml"

- name: Find latest WezTerm version
  ansible.builtin.uri:
    url: "https://api.github.com/repos/wez/wezterm/releases"
    return_content: yes
    validate_certs: no
    body_format: raw
  register: wezterm_releases_response

- name: Set WezTerm version to latest
  ansible.builtin.set_fact:
    wezterm_version: "{{ wezterm_releases_response.json[0].tag_name }}"

- name: Install WezTerm {{ wezterm_version }}
  ansible.builtin.apt:
    deb: "https://github.com/wez/wezterm/releases/download/{{ wezterm_version }}/wezterm-{{ wezterm_version }}.Ubuntu22.04.deb"
  become: true

- name: Copy WezTerm configuration
  ansible.builtin.copy:
    src: "shell/.wezterm.lua"
    dest: "/home/{{ local_user }}/.wezterm.lua"

- name: Install Tmux
  ansible.builtin.apt:
    name: tmux
    state: latest
  become: true

- name: Create Tmux config directory
  ansible.builtin.file:
    dest: "/home/{{ local_user }}/.config/tmux/"
    state: directory
    recurse: true

- name: Copy Tmux configuration
  ansible.builtin.copy:
    src: "shell/tmux.conf"
    dest: "/home/{{ local_user }}/.config/tmux/tmux.conf"

- name: Download Tmux plugin manger
  ansible.builtin.git:
    repo: "https://github.com/tmux-plugins/tpm"
    dest: "/home/{{ local_user }}/.tmux/plugins/tpm"
    depth: 1

- name: Install Tmux plugins
  ansible.builtin.shell: "/home/{{ local_user }}/.tmux/plugins/tpm/bin/install_plugins"

- name: Find latest zoxide version
  ansible.builtin.uri:
    url: "https://api.github.com/repos/ajeetdsouza/zoxide/releases"
    return_content: yes
    validate_certs: no
    body_format: raw
  register: zoxide_releases_response

- name: Set zoxide version to latest
  ansible.builtin.set_fact:
    zoxide_version: "{{ zoxide_releases_response.json[0].tag_name | replace('v', '') }}"

- name: Install zoxide {{ zoxide_version }}
  ansible.builtin.apt:
    deb: "https://github.com/ajeetdsouza/zoxide/releases/download/v{{ zoxide_version }}/zoxide_{{ zoxide_version }}-1_amd64.deb"
  become: true

- name: Install fzf, ag and fd-find
  ansible.builtin.apt:
    name:
      - fzf
      - silversearcher-ag
      - fd-find 
  become: true

- name: Create symlink for fd-find
  ansible.builtin.file:
    src: /usr/bin/fdfind
    dest: /usr/bin/fd
    state: link
  become: true
